{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WeGen\\\\my-todo-app\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser, registerUser } from '../services/api';\n\n// Definição do tipo para o contexto de autenticação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Exporta o AuthContext para que possa ser utilizado fora deste arquivo\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      await loginUser(username, password);\n      setUser(username);\n      localStorage.setItem('user', username);\n    } catch (error) {\n      console.error('Erro ao fazer login', error);\n      throw new Error('Erro ao fazer login');\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      await registerUser(username, password);\n      setUser(username);\n      localStorage.setItem('user', username);\n    } catch (error) {\n      console.error('Erro ao registrar', error);\n      throw new Error('Erro ao registrar');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n// Exporta uma declaração vazia para torná-lo um módulo\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","loginUser","registerUser","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","login","username","password","setItem","error","console","Error","register","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/WeGen/my-todo-app/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport { loginUser, registerUser } from '../services/api';\r\n\r\n// Definição do tipo para o contexto de autenticação\r\ninterface AuthContextType {\r\n  user: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\n// Exporta o AuthContext para que possa ser utilizado fora deste arquivo\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      await loginUser(username, password);\r\n      setUser(username);\r\n      localStorage.setItem('user', username);\r\n    } catch (error) {\r\n      console.error('Erro ao fazer login', error);\r\n      throw new Error('Erro ao fazer login');\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, password: string) => {\r\n    try {\r\n      await registerUser(username, password);\r\n      setUser(username);\r\n      localStorage.setItem('user', username);\r\n    } catch (error) {\r\n      console.error('Erro ao registrar', error);\r\n      throw new Error('Erro ao registrar');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Exporta uma declaração vazia para torná-lo um módulo\r\nexport {};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AAC5E,SAASC,SAAS,EAAEC,YAAY,QAAQ,iBAAiB;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEhF,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdD,OAAO,CAACC,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,IAAI;MACF,MAAMhB,SAAS,CAACe,QAAQ,EAAEC,QAAQ,CAAC;MACnCN,OAAO,CAACK,QAAQ,CAAC;MACjBH,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEF,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAON,QAAgB,EAAEC,QAAgB,KAAK;IAC7D,IAAI;MACF,MAAMf,YAAY,CAACc,QAAQ,EAAEC,QAAQ,CAAC;MACtCN,OAAO,CAACK,QAAQ,CAAC;MACjBH,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEF,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAM,IAAIE,KAAK,CAAC,mBAAmB,CAAC;IACtC;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBZ,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZf,IAAI;IACJK,KAAK;IACLO,QAAQ;IACRC;EACF,CAAC;EAED,oBAAOnB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;;AAED;AAAArB,EAAA,CA/CaF,YAA+C;AAAAwB,EAAA,GAA/CxB,YAA+C;AAgD5D;AAAU,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}