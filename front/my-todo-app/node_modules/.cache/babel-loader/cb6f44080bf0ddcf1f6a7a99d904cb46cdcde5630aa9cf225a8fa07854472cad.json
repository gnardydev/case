{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Importa o AuthContext corretamente\n\n// Hook personalizado para acessar o contexto de autenticação\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext); // Usa o hook useContext para acessar o AuthContext\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider'); // Garante que o hook seja usado dentro de um AuthProvider\n  }\n  return context; // Retorna o contexto de autenticação\n};\n\n// Exporta uma declaração vazia para torná-lo um módulo\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport {};","map":{"version":3,"names":["useContext","AuthContext","useAuth","_s","context","Error"],"sources":["C:/Users/User/Desktop/WeGen/my-todo-app/src/hooks/useAuth.ts"],"sourcesContent":["import { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext'; // Importa o AuthContext corretamente\r\n\r\n// Hook personalizado para acessar o contexto de autenticação\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext); // Usa o hook useContext para acessar o AuthContext\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider'); // Garante que o hook seja usado dentro de um AuthProvider\r\n  }\r\n  return context; // Retorna o contexto de autenticação\r\n};\r\n\r\n// Exporta uma declaração vazia para torná-lo um módulo\r\nexport {};\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;;AAEtD;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGJ,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;EACzC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC,CAAC,CAAC;EACvE;EACA,OAAOD,OAAO,CAAC,CAAC;AAClB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}