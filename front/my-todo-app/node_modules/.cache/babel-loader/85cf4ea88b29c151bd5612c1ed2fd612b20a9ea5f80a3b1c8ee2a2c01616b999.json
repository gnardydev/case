{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WeGen\\\\my-todo-app\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\n// src/components/TaskList.tsx\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await api.get('/Tarefas');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/Tarefas/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Erro ao deletar tarefa:', error);\n    }\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n  const handleSave = task => {\n    if (editingTask) {\n      setTasks(tasks.map(t => t.id === task.id ? task : t));\n    } else {\n      setTasks([...tasks, task]);\n    }\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(task),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task.id),\n        children: \"Deletar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSave,\n      editingTask: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","api","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","editingTask","setEditingTask","fetchTasks","response","get","data","error","console","handleDelete","id","delete","filter","task","handleEdit","handleSave","map","t","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","onClick","onSave","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/WeGen/my-todo-app/src/components/TaskList.tsx"],"sourcesContent":["// src/components/TaskList.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\nimport TaskForm from './TaskForm';\r\n\r\ntype Task = {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  isCompleted: boolean;\r\n  category: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  userId: number;\r\n};\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await api.get('/Tarefas');\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar tarefas:', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await api.delete(`/Tarefas/${id}`);\r\n      setTasks(tasks.filter((task) => task.id !== id));\r\n    } catch (error) {\r\n      console.error('Erro ao deletar tarefa:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task: Task) => {\r\n    setEditingTask(task);\r\n  };\r\n\r\n  const handleSave = (task: Task) => {\r\n    if (editingTask) {\r\n      setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    } else {\r\n      setTasks([...tasks, task]);\r\n    }\r\n    setEditingTask(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lista de Tarefas</h2>\r\n      {tasks.map((task) => (\r\n        <div key={task.id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <button onClick={() => handleEdit(task)}>Editar</button>\r\n          <button onClick={() => handleDelete(task.id)}>Deletar</button>\r\n        </div>\r\n      ))}\r\n      <TaskForm onSave={handleSave} editingTask={editingTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}