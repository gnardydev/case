{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WeGen\\\\my-todo-app\\\\src\\\\components\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/RegisterForm.tsx\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom'; // Importa useNavigate para redirecionamento\n\n// Componente de formulário de registro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const {\n    register\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // Inicializa o hook de navegação\n\n  // Função para lidar com o envio do formulário de registro\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Limpa mensagens de erro antes de tentar registrar\n\n    try {\n      await register(username, password);\n      console.log('Usuário registrado com sucesso, redirecionando...'); // Adicione este log\n      navigate('/'); // Redireciona para a página inicial após registro bem-sucedido\n    } catch (error) {\n      console.error('Erro durante o registro', error);\n      setErrorMessage('Erro ao registrar. Por favor, tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Nome de usu\\xE1rio\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Senha\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Registrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"49DB0dfDpEwySdyo+3GX8L88cL4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","RegisterForm","_s","register","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","console","log","error","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/WeGen/my-todo-app/src/components/RegisterForm.tsx"],"sourcesContent":["// src/components/RegisterForm.tsx\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom'; // Importa useNavigate para redirecionamento\r\n\r\n// Componente de formulário de registro\r\nconst RegisterForm: React.FC = () => {\r\n  const { register } = useAuth()!;\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate(); // Inicializa o hook de navegação\r\n\r\n  // Função para lidar com o envio do formulário de registro\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrorMessage(''); // Limpa mensagens de erro antes de tentar registrar\r\n\r\n    try {\r\n      await register(username, password);\r\n      console.log('Usuário registrado com sucesso, redirecionando...'); // Adicione este log\r\n      navigate('/'); // Redireciona para a página inicial após registro bem-sucedido\r\n    } catch (error) {\r\n      console.error('Erro durante o registro', error);\r\n      setErrorMessage('Erro ao registrar. Por favor, tente novamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Nome de usuário\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Senha\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Registrar</button>\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>} {/* Exibe a mensagem de erro se houver */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAS,CAAC,GAAGN,OAAO,CAAC,CAAE;EAC/B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMa,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;;IAErB,IAAI;MACF,MAAMN,QAAQ,CAACC,QAAQ,EAAEE,QAAQ,CAAC;MAClCQ,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC,CAAC,CAAC;MAClEL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CP,eAAe,CAAC,gDAAgD,CAAC;IACnE;EACF,CAAC;EAED,oBACET,OAAA;IAAMiB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGT,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,oBAAiB;MAC7BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGT,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,OAAO;MACnBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvCpB,YAAY,iBAAIR,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEV;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA1CID,YAAsB;EAAA,QACLJ,OAAO,EAIXC,WAAW;AAAA;AAAAiC,EAAA,GALxB9B,YAAsB;AA4C5B,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}